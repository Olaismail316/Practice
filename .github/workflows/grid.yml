name: Run GitHubPageTest with Selenium Grid

on:
  workflow_dispatch:  # Allows manual triggering from GitHub Actions UI

jobs:
  run-tests:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      # Step 1: Install Docker Compose
      - name: Install Docker Compose
        run: |
          sudo curl -L "https://github.com/docker/compose/releases/download/$(curl -s https://api.github.com/repos/docker/compose/releases/latest | grep -oP '"tag_name": "\K(.*)(?=")')" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
          docker-compose --version  # Check if Docker Compose is installed

      # Step 2: Set up Selenium Grid using Docker Compose with Scaling
      - name: Set up Selenium Grid with Chrome
        run: docker-compose -f docker-compose.yml up -d --scale chrome=1 --scale firefox=0  # Scale to 1 Chrome node and no Firefox nodes

      # Step 3: Wait for Selenium Grid to be ready (optional but recommended)
      - name: Wait for Selenium Grid to be ready
        run: |
          echo "Waiting for Selenium Grid to be ready..."
          sleep 15  # Wait a few seconds for the Grid to initialize

      # Step 4: Set up JDK 21
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'zulu'
          cache: 'maven'

      # Step 5: Set up Maven
      - name: Set up Maven
        uses: stCarolas/setup-maven@v5
        with:
          maven-version: 3.9.5

      # Step 6: Run GitHubPageTest on Selenium Grid
      - name: Run GitHubPageTest
        run: mvn test \
          -Dtest=GitHubPageTest \
          -DexecutionAddress=http://localhost:4444 \
          -Dbrowser=chrome \
          -DheadlessExecution=true \
          -Dsurefire.failIfNoSpecifiedTests=false \
          -e

      # Step 7: Tear down Selenium Grid
      - name: Tear down Selenium Grid
        run: docker-compose -f docker-compose.yml down  # Bring down the Selenium Grid
